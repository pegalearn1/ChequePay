# Generated by Django 5.1.2 on 2024-12-11 19:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_char', models.CharField(max_length=10)),
                ('bank_name_e', models.CharField(max_length=120)),
                ('bank_name_l', models.CharField(max_length=120)),
                ('tel_no', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_by', models.IntegerField()),
                ('modified_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ChequeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='*Name of the cheque template', max_length=100)),
                ('width', models.FloatField(help_text='*Width of the cheque in mm')),
                ('height', models.FloatField(help_text='*Height of the cheque in mm')),
                ('background_image', models.ImageField(help_text='*Upload the cheque background image', upload_to='cheque_templates/')),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_by', models.IntegerField()),
                ('modified_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Company_Setup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_id', models.CharField(max_length=50)),
                ('company_name', models.CharField(max_length=120)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('tax_id', models.CharField(blank=True, max_length=120, null=True)),
                ('currency_id', models.IntegerField()),
                ('tel_no', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=100)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_by', models.IntegerField()),
                ('modified_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Currencies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_char', models.CharField(max_length=5)),
                ('currency_name', models.CharField(max_length=100)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_by', models.IntegerField()),
                ('modified_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Payee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payee_name', models.CharField(max_length=120)),
                ('mobile_no', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=100)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_by', models.IntegerField()),
                ('modified_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ChqpayUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('civil_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('privilege_char', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChequeText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_x_position', models.FloatField(blank=True, null=True)),
                ('date_y_position', models.FloatField(blank=True, null=True)),
                ('payee_x_position', models.FloatField(blank=True, null=True)),
                ('payee_y_position', models.FloatField(blank=True, null=True)),
                ('amtwrds_x_position', models.FloatField(blank=True, null=True)),
                ('amtwrds_y_position', models.FloatField(blank=True, null=True)),
                ('amtnum_x_position', models.FloatField(blank=True, null=True)),
                ('amtnum_y_position', models.FloatField(blank=True, null=True)),
                ('sign_x_position', models.FloatField(blank=True, null=True)),
                ('sign_y_position', models.FloatField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_by', models.IntegerField()),
                ('modified_date', models.DateTimeField()),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chq_pay.chequetemplate')),
            ],
        ),
    ]
